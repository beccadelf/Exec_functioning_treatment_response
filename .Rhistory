knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(pander)
NumberLetter_HC <- read.csv("Z:/Projekte_Meinke/Old_projects/Labrotation_Rebecca/Daten_Gruppenvergleich/NumberLetter_HC.csv")
NumberLetter_Patients_Post <- read.csv("Z:/Projekte_Meinke/Old_projects/Labrotation_Rebecca/Daten_Gruppenvergleich/NumberLetter_Patients_Post.csv")
NumberLetter_Patients_Pre <-  read.csv("Z:/Projekte_Meinke/Old_projects/Labrotation_Rebecca/Daten_Gruppenvergleich/NumberLetter_Patients_Pre.csv")
Stroop_HC <- read.csv("Z:/Projekte_Meinke/Old_projects/Labrotation_Rebecca/Daten_Gruppenvergleich/Stroop_HC.csv")
Stroop_Patients_Post <-  read.csv("Z:/Projekte_Meinke/Old_projects/Labrotation_Rebecca/Daten_Gruppenvergleich/Stroop_Patients_Post.csv")
Stroop_Patients_Pre <-  read.csv("Z:/Projekte_Meinke/Old_projects/Labrotation_Rebecca/Daten_Gruppenvergleich/Stroop_Patients_Pre.csv")
TwoBack_HC <- read.csv("Z:/Projekte_Meinke/Old_projects/Labrotation_Rebecca/Daten_Gruppenvergleich/TwoBack_HC.csv")
TwoBack_Patients_Post <-  read.csv("Z:/Projekte_Meinke/Old_projects/Labrotation_Rebecca/Daten_Gruppenvergleich/TwoBack_Patients_Post.csv")
TwoBack_Patients_Pre <-  read.csv("Z:/Projekte_Meinke/Old_projects/Labrotation_Rebecca/Daten_Gruppenvergleich/TwoBack_Patients_Pre.csv")
data_all <- haven::read_dta('Z:/Projekte_Meinke/Old_projects/Labrotation_Rebecca/CognitiveControl_Treatment/Data_Kevin_28.07.23.dta')
colnames(data_all)[which(colnames(data_all) == "id")] <- "Subject"
View(NumberLetter_HC)
Patients_pre_2 <- merge(NumberLetter_Patients_Pre, Stroop_Patients_Pre, by = "Subject")
Patients_pre_3 <- merge(Patients_pre_2, TwoBack_Patients_Pre, by = "Subject")
## 2. Merge controls (different tasks)
Controls_2 <- merge(NumberLetter_HC, Stroop_HC, by = "Subject")
Controls_3 <- merge(Controls_2, TwoBack_HC, by = "Subject")
## 3. Merge Controls and patients
Patients_vs_HC <- rbind(Patients_pre_3, Controls_3)
BIS_columns <- colnames(Patients_vs_HC)[startsWith(colnames(Patients_vs_HC), "BIS")]
View(Patients_vs_HC)
Patients_vs_HC_imp <- Patients_vs_HC[,c("Subject",BIS_columns,"Gruppe")]
View(Patients_vs_HC_imp)
Patients_vs_HC_imp <- Patients_vs_HC_imp %>%
rename(NumberLetter_BIS_Repeat = BIS_Repeat,
NumberLetter_BIS_Switch = BIS_Switch,
Stroop_BIS_Congruent = BIS_Congruent,
Stroop_BIS_Incongruent = BIS_Incongruent,
TwoBack_BIS_Total = BIS_Total,
TwoBack_BIS_Target = BIS_Target,
TwoBack_BIS_Foil = BIS_Foil)
BIS_columns_renamed <- grep("BIS", colnames(Patients_vs_HC_imp), value = TRUE)
Patients_vs_HC_imp_conf <- merge(data_all[,c("Subject","Alter","Geschlecht","Abschluss")], Patients_vs_HC_imp, by = "Subject")
View(Patients_vs_HC_imp_conf)
df_test <- data.frame(t_statistic = numeric(length(BIS_columns_renamed)), p_value = numeric(length(BIS_columns_renamed)))
rownames(df_test) <- BIS_columns_renamed
View(df_test)
t_test_mult_cols <- function(df_basis, cols){
# Create an overview of t-test results for several columns in a dataframe
df <- data.frame(t_statistic = numeric(length(cols)), p_value = numeric(length(cols)))
rownames(df) <- cols
for (col in cols){
results <- t.test(df_basis[[col]] ~ df_basis[["Gruppe"]], paired = FALSE, var.equal = FALSE)
df[col, "t_statistic"] <- round(results$statistic,2)
df[col, "p_value"] <- round(results$p.value,2)
df[col, "group_mean_Patients"] <- round(mean(df_basis[df_basis[["Gruppe"]] == 0, col]),2)
df[col, "sd_Patients"] <- round(sd(df_basis[df_basis[["Gruppe"]] == 0, col]),2)
df[col, "group_mean_HC"] <- round(mean(df_basis[df_basis[["Gruppe"]] == 1, col]),2)
df[col, "sd_HC"] <- round(sd(df_basis[df_basis[["Gruppe"]] == 1, col]),2)
}
return(df)
}
t_test_table <- t_test_mult_cols(df_basis = Patients_vs_HC_imp, cols = BIS_columns_renamed)
View(t_test_table)
pander(t_test_table, style = "rmarkdown", fontsize = "tiny")
# Sociodemographic data
library(gtsummary)
table1 <-
Patients_vs_HC_imp_conf %>%
tbl_summary(include = c(Alter, Geschlecht, Abschluss), by = Gruppe)
table1
df_test <- data.frame(Gruppe_p_value = numeric(length(BIS_columns_renamed)))
rownames(df_test) <- BIS_columns_renamed
View(df_test)
covariates <- c("Alter","Geschlecht","Abschluss")
formula <- paste(NumberLetter_BIS_Repeat, " ~ Gruppe", ifelse(length(covariates) > 0, paste(" + ", paste(covariates, collapse = " + ")), ""))
covariates <- c("Alter","Geschlecht","Abschluss")
formula <- paste("NumberLetter_BIS_Repeat", " ~ Gruppe", ifelse(length(covariates) > 0, paste(" + ", paste(covariates, collapse = " + ")), ""))
anova_result <- aov(as.formula(formula), data = Patients_vs_HC_imp_conf)
View(anova_result)
coefficients <- coef(anova_result)
summary_anova <- summary(anova_result)
View(summary_anova)
ANCOVA_mult_cols <- function(df_basis, cols, covariates = NULL){
# Create an overview of ANCOVA results for several columns in a dataframe
df <- data.frame(Gruppe_p_value = numeric(length(cols)))
rownames(df) <- cols
for (col in cols){
# Run ANCOVA
formula <- paste(col, " ~ Gruppe", ifelse(length(covariates) > 0, paste(" + ", paste(covariates, collapse = " + ")), ""))
anova_result <- aov(as.formula(formula), data = df_basis)
coefficients <- coef(anova_result)
summary_anova <- summary(anova_result)
print(summary_anova)
# Prepare nice table to summarize the results
df[col, "Gruppe_p_value"] <- round(summary_anova[[1]]$"Pr(>F)"[1],2)
df[col, "Gruppe_corrected_difference"] <- round(coefficients[2],2)
df[col, "Alter_p_value"] <- round(summary_anova[[1]]$"Pr(>F)"[2],2)
df[col, "Geschlecht_p_value"] <- round(summary_anova[[1]]$"Pr(>F)"[3],2)
df[col, "Abschluss_p_value"] <- round(summary_anova[[1]]$"Pr(>F)"[4],2)
}
return(df)
}
table_ANCOVA <- ANCOVA_mult_cols(df_basis = Patients_vs_HC_imp_conf, cols = BIS_columns_renamed, covariates = c("Alter","Geschlecht","Abschluss"))
pander(table_ANCOVA, style = "rmarkdown", fontsize = "tiny")
Patients_pre_2 <- merge(NumberLetter_Patients_Pre, Stroop_Patients_Pre, by = "Subject")
Patients_pre_3 <- merge(Patients_pre_2, TwoBack_Patients_Pre, by = "Subject")
Patients_pre_3$time <- "pre"
## Merge patients Post
Patients_post_2 <- merge(NumberLetter_Patients_Post, Stroop_Patients_Post, by = "Subject")
Patients_post_3 <- merge(Patients_post_2, TwoBack_Patients_Post, by = "Subject")
Patients_post_3$time <- "post"
View(Patients_post_3)
Patients_post_3$time
Patients_pre_3$Subject <- Patients_pre_3$Subject + 600 # This was the ID given
Patients_pre_vs_post <- rbind(Patients_post_3, Patients_pre_3)
View(Patients_pre_vs_post)
subject_counts <- table(Patients_pre_vs_post$Subject)
subject_counts
multiple_rows_subjects <- names(subject_counts)[subject_counts > 1]
Patients_pre_vs_post_clean <- Patients_pre_vs_post[Patients_pre_vs_post$Subject %in% multiple_rows_subjects, ]
BIS_columns <- colnames(Patients_pre_vs_post_clean)[startsWith(colnames(Patients_pre_vs_post_clean), "BIS")]
Patients_pre_vs_post_imp <- Patients_pre_vs_post_clean[,c("Subject",BIS_columns,"time")]
View(Patients_pre_vs_post_imp)
Patients_pre_vs_post_imp <- Patients_pre_vs_post_imp %>%
rename(NumberLetter_BIS_Repeat = BIS_Repeat,
NumberLetter_BIS_Switch = BIS_Switch,
Stroop_BIS_Congruent = BIS_Congruent,
Stroop_BIS_Incongruent = BIS_Incongruent,
TwoBack_BIS_Total = BIS_Total,
TwoBack_BIS_Target = BIS_Target,
TwoBack_BIS_Foil = BIS_Foil)
BIS_columns_renamed <- grep("BIS", colnames(Patients_pre_vs_post_imp), value = TRUE)
paired_t_test_mult_cols <- function(df_basis, cols){
# Create an overview of t-test results for several columns in a dataframe
df <- data.frame(t_statistic = numeric(length(cols)), p_value = numeric(length(cols)),
group_mean_pre = numeric(length(cols)), group_mean_post = numeric(length(cols)))
rownames(df) <- cols
for (col in cols){
results <- t.test(df_basis[[col]] ~ df_basis[["time"]], paired = TRUE, var.equal = FALSE)
df[col, "t_statistic"] <- round(results$statistic, 2)
df[col, "p_value"] <- results$p.value
# Calculate group means
df[col, "group_mean_pre"] <- round(mean(df_basis[df_basis[["time"]] == "pre", col]),2)
df[col, "sd_pre"] <- round(sd(df_basis[df_basis[["time"]] == "pre", col]),2)
df[col, "group_mean_post"] <- round(mean(df_basis[df_basis[["time"]] == "post", col]),2)
df[col, "sd_post"] <- round(sd(df_basis[df_basis[["time"]] == "post", col]),2)
}
return(df)
}
t_test_table_pre_post <- paired_t_test_mult_cols(df_basis = Patients_pre_vs_post_imp, cols = BIS_columns_renamed)
pander(t_test_table_pre_post)
t_test_table_pre_post
View(Patients_vs_HC_imp)
boxplot(Patients_vs_HC_imp$NumberLetter_BIS_Repeat[[Patients_vs_HC_imp$Gruppe == "1"]])
boxplot(Patients_vs_HC_imp$NumberLetter_BIS_Repeat[Patients_vs_HC_imp$Gruppe == "1"])
boxplot(Patients_vs_HC_imp$NumberLetter_BIS_Repeat[Patients_vs_HC_imp$Gruppe == "1"],
Patients_vs_HC_imp$NumberLetter_BIS_Repeat[Patients_vs_HC_imp$Gruppe == "0"],
main = "NumberLetter BIS-Repeat HC vs. Patients",
at = c(1, 2),
names = c("Healthy Controls", "Patients"))
boxplot(NumberLetter_BIS_Repeat~Gruppe,
data = Patients_vs_HC_imp,
main = "NumberLetter BIS-Repeat HC vs. Patients",
xlab = "Group",
ylab = "BIS Score",
#Patients_vs_HC_imp$NumberLetter_BIS_Repeat[Patients_vs_HC_imp$Gruppe == "1"],
#Patients_vs_HC_imp$NumberLetter_BIS_Repeat[Patients_vs_HC_imp$Gruppe == "0"],
#at = c(1, 2),
#names = c("Healthy Controls", "Patients")
)
boxplot(NumberLetter_BIS_Repeat~Gruppe,
data = Patients_vs_HC_imp,
main = "NumberLetter BIS-Repeat HC vs. Patients",
xlab = "Group",
ylab = "BIS Score"
#Patients_vs_HC_imp$NumberLetter_BIS_Repeat[Patients_vs_HC_imp$Gruppe == "1"],
#Patients_vs_HC_imp$NumberLetter_BIS_Repeat[Patients_vs_HC_imp$Gruppe == "0"],
#at = c(1, 2),
#names = c("Healthy Controls", "Patients")
)
library(tidyr)
#boxplot(NumberLetter_BIS_Repeat~Gruppe,
#        data = Patients_vs_HC_imp,
#        main = "NumberLetter BIS-Repeat HC vs. Patients",
#        xlab = "Group",
#        ylab = "BIS Score")
# Reshape data from wide to long format
Patients_vs_HC_imp_long <- Patients_vs_HC_imp %>%
pivot_longer(cols = BIS_columns_renamed,
names_to = "Condition",
values_to = "BIS_Score")
View(Patients_vs_HC_imp_conf)
View(Patients_vs_HC_imp_long)
Patients_vs_HC_imp_long <- Patients_vs_HC_imp_long %>%
mutate(Task = case_when(
grepl("NumberLetter", Condition) ~ "NumberLetter",
grepl("Stroop", Condition) ~ "Stroop",
grepl("TwoBack", Condition) ~ "TwoBack"
))
boxplot_HC_patients <- ggplot(Patients_vs_HC_imp_long, aes(x = Condition, y = BIS_Score, fill = factor(Gruppe))) +
geom_boxplot() +
facet_grid(rows = vars(Task), scales = "free_x") +
labs(title = "Task conditions by group",
x = "Task condition",
y = "BIS Score",
fill = "Group")
boxplot_HC_patients
boxplot_HC_patients <- ggplot(Patients_vs_HC_imp_long, aes(x = Condition, y = BIS_Score, fill = factor(Gruppe))) +
geom_boxplot() +
facet_grid(rows = vars(Task), scales = "free_x") +
labs(title = "Task conditions by group",
x = "Task condition",
y = "BIS Score",
fill = "Group") +
theme_bw() +
theme(strip.background = element_blank(),
strip.text = element_text(size = 10, face = "bold"),
panel.grid.major = element_line(colour = "grey80"),
panel.grid.minor = element_blank())
boxplot_HC_patients
boxplot_HC_patients <- ggplot(Patients_vs_HC_imp_long, aes(x = Task, y = BIS_Score, fill = factor(Gruppe))) +
geom_boxplot() +
facet_grid(cols = vars(Condition), rows = vars(Task), scales = "free_y") +
labs(title = "Task conditions by group",
x = "Task",
y = "BIS Score",
fill = "Group")
boxplot_HC_patients
boxplot_HC_patients <- ggplot(Patients_vs_HC_imp_long, aes(x = Condition, y = BIS_Score, fill = factor(Gruppe))) +
geom_boxplot(outlier.shape = NA, alpha = 0.6) +
geom_jitter(aes(color = factor(Gruppe)), width = 0.2, size = 1.5, alpha = 0.7) +
facet_grid(rows = vars(Task), scales = "free_x") +
labs(title = "Task conditions by group",
x = "Task",
y = "BIS Score",
fill = "Group")
boxplot_HC_patients
boxplot_HC_patients <- ggplot(Patients_vs_HC_imp_long, aes(x = Condition, y = BIS_Score, fill = factor(Gruppe))) +
geom_boxplot(outlier.shape = NA, alpha = 0.6) +
geom_jitter(aes(color = factor(Gruppe)), width = 0.2, size = 0.5, alpha = 0.7) +
facet_grid(rows = vars(Task), scales = "free_x") +
labs(title = "Task conditions by group",
x = "Task",
y = "BIS Score",
fill = "Group",
color = "Group")
boxplot_HC_patients
boxplot_HC_patients <- ggplot(Patients_vs_HC_imp_long, aes(x = Condition, y = BIS_Score, fill = factor(Gruppe))) +
geom_boxplot(outlier.shape = NA, alpha = 0.6, position = position_dodge(width = 0.8)) +
geom_jitter(aes(color = factor(Gruppe)),
position = position_dodge(width = 0.8),
width = 0.2, size = 0.75, alpha = 0.7) +
facet_grid(rows = vars(Task), scales = "free_x") +
labs(title = "Task conditions by group",
x = "Task",
y = "BIS Score",
fill = "Group",
color = "Group")
boxplot_HC_patients <- ggplot(Patients_vs_HC_imp_long, aes(x = Condition, y = BIS_Score, fill = factor(Gruppe))) +
geom_boxplot(outlier.shape = NA, alpha = 0.6, position = position_dodge(width = 0.8)) +
geom_jitter(aes(color = factor(Gruppe)),
position = position_dodge(width = 0.8),
size = 0.75, alpha = 0.7) +
facet_grid(rows = vars(Task), scales = "free_x") +
labs(title = "Task conditions by group",
x = "Task",
y = "BIS Score",
fill = "Group",
color = "Group")
boxplot_HC_patients
boxplot_HC_patients <- ggplot(Patients_vs_HC_imp_long, aes(x = Condition, y = BIS_Score, fill = factor(Gruppe))) +
geom_boxplot(outlier.shape = NA, alpha = 0.6, position = position_dodge(width = 0.8)) +
geom_jitter(aes(color = factor(Gruppe)),
position = position_dodge(width = 0.1),
size = 0.75, alpha = 0.7) +
facet_grid(rows = vars(Task), scales = "free_x") +
labs(title = "Task conditions by group",
x = "Task",
y = "BIS Score",
fill = "Group",
color = "Group")
boxplot_HC_patients
boxplot_HC_patients <- ggplot(Patients_vs_HC_imp_long, aes(x = Condition, y = BIS_Score, fill = factor(Gruppe))) +
geom_boxplot(outlier.shape = NA, alpha = 0.6, position = position_dodge(width = 0.8)) +
geom_jitter(aes(color = factor(Gruppe)),
position = position_dodge(width = 0.8),
size = 0.75, alpha = 0.5) +
facet_grid(rows = vars(Task), scales = "free_x") +
labs(title = "Task conditions by group",
x = "Task",
y = "BIS Score",
fill = "Group",
color = "Group")
boxplot_HC_patients
View(Patients_pre_vs_post_imp)
